/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
  BigNumberish,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { TicketsT, TicketsTInterface } from "../TicketsT";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_ticketInitialPrice",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "recieved",
        type: "uint256",
      },
    ],
    name: "ticket",
    type: "event",
  },
  {
    inputs: [],
    name: "buyTicket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getTicketPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052604051610371380380610371833981810160405281019061002591906100ad565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600281905550506100da565b600080fd5b6000819050919050565b61008a81610077565b811461009557600080fd5b50565b6000815190506100a781610081565b92915050565b6000602082840312156100c3576100c2610072565b5b60006100d184828501610098565b91505092915050565b610288806100e96000396000f3fe6080604052600436106100345760003560e01c806387bb7ae0146100395780638da5cb5b14610064578063edca914c1461008f575b600080fd5b34801561004557600080fd5b5061004e610099565b60405161005b919061015e565b60405180910390f35b34801561007057600080fd5b506100796100a3565b60405161008691906101ba565b60405180910390f35b6100976100c7565b005b6000600254905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025434101561010c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010390610232565b60405180910390fd5b7fc129ff32f1247245261dd5b4ec71596f97c9370baeea0b9d609b518ef09dac643460405161013b919061015e565b60405180910390a1565b6000819050919050565b61015881610145565b82525050565b6000602082019050610173600083018461014f565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101a482610179565b9050919050565b6101b481610199565b82525050565b60006020820190506101cf60008301846101ab565b92915050565b600082825260208201905092915050565b7f6c6f776572207468616e2063757272656e742070726963650000000000000000600082015250565b600061021c6018836101d5565b9150610227826101e6565b602082019050919050565b6000602082019050818103600083015261024b8161020f565b905091905056fea26469706673582212208c15a7b300c80236576aadaac543eea26a82d79c8d49b797ca04a90481ad718664736f6c63430008090033";

type TicketsTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TicketsTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TicketsT__factory extends ContractFactory {
  constructor(...args: TicketsTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _ticketInitialPrice: PromiseOrValue<BigNumberish>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<TicketsT> {
    return super.deploy(
      _ticketInitialPrice,
      overrides || {}
    ) as Promise<TicketsT>;
  }
  override getDeployTransaction(
    _ticketInitialPrice: PromiseOrValue<BigNumberish>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_ticketInitialPrice, overrides || {});
  }
  override attach(address: string): TicketsT {
    return super.attach(address) as TicketsT;
  }
  override connect(signer: Signer): TicketsT__factory {
    return super.connect(signer) as TicketsT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TicketsTInterface {
    return new utils.Interface(_abi) as TicketsTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TicketsT {
    return new Contract(address, _abi, signerOrProvider) as TicketsT;
  }
}
